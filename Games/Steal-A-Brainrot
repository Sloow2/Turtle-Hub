local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title = "Turtle hub - SAB",
    Icon = "bird",  -- Changed icon to "Bird"
    Folder = "MySuperHub",
    Size = UDim2.fromOffset(580, 460),
    MinSize = Vector2.new(560, 350),
    MaxSize = Vector2.new(850, 560),
    Transparent = true,
    Theme = "Dark",
    Resizable = true,
    SideBarWidth = 200,
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    AutoShow = true
})

-- Create the "Teleport" tab
local TeleportTab = Window:Tab({
    Title = "Teleport",
    Icon = "map-pin", -- You can change this to another icon if you'd like
    Locked = false
})

-- Add a button to the "Teleport" tab
TeleportTab:Button({
    Title = "Click me!",  -- Button text
    Description = "Teleport to the middle of the map",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character and character:FindFirstChild("HumanoidRootPart") then
            -- Teleporting to the middle of the map (position: 0, 0, 0)
            character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(0, 0, 0))
        end
    end
})

-- Create the "Player" tab
local PlayerTab = Window:Tab({
    Title = "Player",
    Icon = "user",  -- You can change this to another icon as well
    Locked = false
})

-- Walkspeed Slider inside "Player" tab
PlayerTab:Slider({
    Title = "Walkspeed",
    Step = 1,  -- Steps in integer, e.g., 1
    Value = {
        Min = 16,  -- Minimum Walkspeed
        Max = 25, -- Maximum Walkspeed
        Default = 16,  -- Default Walkspeed (e.g., 50)
    },
    Callback = function(value)
        local player = game.Players.LocalPlayer
        local character = player.Character
        if character and character:FindFirstChild("Humanoid") then
            -- Set player's walkspeed to the value from the slider
            character.Humanoid.WalkSpeed = value
            print("Walkspeed set to: " .. value)
        end
    end
})

-- Create the "Info" tab with two "Click me!" buttons
local InfoTab = Window:Tab({
    Title = "Info",
    Icon = "info-circle",  -- Icon for the info tab
    Locked = false
})

-- First "Click me!" button (Library - WindUI) without cursor icon
InfoTab:Button({
    Title = "Library - WindUI",  -- Button text
    Description = "Learn more about the WindUI library",
    Icon = nil,  -- Removes the icon (no cursor icon)
    Callback = function()
        print("Library - WindUI button clicked!")  -- Action when button is clicked
    end
})

-- Second "Click me!" button without cursor icon
InfoTab:Button({
    Title = "Click me!",  -- Button text
    Description = "A simple button for demonstration",
    Icon = nil,  -- Removes the icon (no cursor icon)
    Callback = function()
        print("Button clicked!")  -- Action when button is clicked
    end
})

-- Server-side setup for walkspeed (no persistence, no saving)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local walkspeedRemote = Instance.new("RemoteEvent")
walkspeedRemote.Name = "WalkspeedRemote"
walkspeedRemote.Parent = ReplicatedStorage

-- Server-side code to handle walkspeed changes
game.Players.PlayerAdded:Connect(function(player)
    -- Apply default walkspeed when the player spawns
    player.CharacterAdded:Connect(function(character)
        if character and character:FindFirstChild("Humanoid") then
            character.Humanoid.WalkSpeed = 50  -- Default walkspeed (no persistence)
        end
    end)
end)

-- Listen for client-side walkspeed change requests
walkspeedRemote.OnServerEvent:Connect(function(player, newWalkspeed)
    -- Validate the new walkspeed is within range
    if newWalkspeed >= 20 and newWalkspeed <= 100 then
        -- Set the player's walkspeed immediately (but don't save it)
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = newWalkspeed
        end
    end
end)
